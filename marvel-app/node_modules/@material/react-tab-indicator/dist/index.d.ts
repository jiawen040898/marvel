import React from 'react';
import { MDCSlidingTabIndicatorFoundation } from '@material/tab-indicator/sliding-foundation';
import { MDCFadingTabIndicatorFoundation } from '@material/tab-indicator/fading-foundation';
import { MDCTabIndicatorAdapter } from '@material/tab-indicator/adapter';
export interface TabIndicatorProps extends React.HTMLAttributes<HTMLSpanElement> {
    active?: boolean;
    className?: string;
    fade?: boolean;
    icon?: boolean;
    previousIndicatorClientRect?: ClientRect;
}
export default class TabIndicator extends React.Component<TabIndicatorProps, {}> {
    private tabIndicatorElement;
    foundation: MDCFadingTabIndicatorFoundation | MDCSlidingTabIndicatorFoundation;
    static defaultProps: Partial<TabIndicatorProps>;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: TabIndicatorProps): void;
    readonly classes: string;
    readonly contentClasses: string;
    readonly adapter: MDCTabIndicatorAdapter;
    private getNativeContentElement;
    computeContentClientRect: () => ClientRect;
    render(): JSX.Element;
    addContentClassesToChildren: () => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;
    renderContent(): JSX.Element;
}
