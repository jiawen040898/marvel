{"ast":null,"code":"var simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;","map":{"version":3,"names":["simpleIsEqual","a","b","index","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","isNewArgEqualToLast","newArg","result","_len","arguments","length","newArgs","Array","_key","every","apply"],"sources":["/Users/tan.jiawen/Documents/marvel/marvel-app/node_modules/memoize-one/dist/memoize-one.esm.js"],"sourcesContent":["var simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n"],"mappings":"AAAA,IAAIA,aAAa,GAAG,SAASA,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;EAC/C,OAAOD,CAAC,KAAKC,CAAb;AACD,CAFD;;AAIA,SAASC,KAAT,CAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;EACjC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAGL,aAAV;EACD;;EAED,IAAIM,QAAJ;EACA,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,UAAJ;EACA,IAAIC,UAAU,GAAG,KAAjB;;EAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,MAA7B,EAAqCR,KAArC,EAA4C;IACpE,OAAOE,OAAO,CAACM,MAAD,EAASJ,QAAQ,CAACJ,KAAD,CAAjB,CAAd;EACD,CAFD;;EAIA,IAAIS,MAAM,GAAG,SAASA,MAAT,GAAkB;IAC7B,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,OAAO,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAAvC,EAAwDK,IAAI,GAAG,CAApE,EAAuEA,IAAI,GAAGL,IAA9E,EAAoFK,IAAI,EAAxF,EAA4F;MAC1FF,OAAO,CAACE,IAAD,CAAP,GAAgBJ,SAAS,CAACI,IAAD,CAAzB;IACD;;IAED,IAAIT,UAAU,IAAIH,QAAQ,KAAK,IAA3B,IAAmCU,OAAO,CAACD,MAAR,KAAmBR,QAAQ,CAACQ,MAA/D,IAAyEC,OAAO,CAACG,KAAR,CAAcT,mBAAd,CAA7E,EAAiH;MAC/G,OAAOF,UAAP;IACD;;IAEDA,UAAU,GAAGJ,QAAQ,CAACgB,KAAT,CAAe,IAAf,EAAqBJ,OAArB,CAAb;IACAP,UAAU,GAAG,IAAb;IACAH,QAAQ,GAAG,IAAX;IACAC,QAAQ,GAAGS,OAAX;IACA,OAAOR,UAAP;EACD,CAdD;;EAgBA,OAAOI,MAAP;AACD;;AAED,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}